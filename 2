package exam;

import java.util.*;

public class quicksort_two {
    static void quickSort(int[] a, int low, int high) {
        if (low < high) {
            int p = partition(a, low, high);
            quickSort(a, low, p - 1);
            quickSort(a, p + 1, high);
        }
    }

    static int partition(int[] a, int low, int high) {
        int pivot = a[low], i = low + 1, j = high, t;
        while (i <= j) {
            while (i <= high && a[i] <= pivot) 
            	i++;
            while (a[j] > pivot) 
            	j--;
            if (i < j) { 
            	t = a[i];
            	a[i] = a[j];
            	a[j] = t; }
        }
        t = a[low]; a[low] = a[j]; a[j] = t;
        return j;
    }

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        Random r = new Random();
        System.out.print("Enter the Array size: ");
        int n = s.nextInt(), a[] = new int[n];
        for (int i = 0; i < n; i++)
        	a[i] = r.nextInt(100);
        System.out.println("Array Before Sorting : " + Arrays.toString(a));
        long t1 = System.nanoTime();
        quickSort(a, 0, n - 1);
        long t2 = System.nanoTime();
        System.out.println("After Sorting: " + Arrays.toString(a));
        System.out.println("Time taken to sort Array: " + (t2 - t1) / 1e6 + " ms");
    }
}

