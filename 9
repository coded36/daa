package exam;

import java.util.*;

public class KnapSackDP {
    static int knap(int[] wt, int[] val, int cap) {
        int n = wt.length;
        int[][] dp = new int[n + 1][cap + 1];

        for (int i = 1; i <= n; i++) {
            for (int w = 1; w <= cap; w++) {
                if (wt[i - 1] <= w)
                    dp[i][w] = Math.max(val[i - 1] + dp[i - 1][w - wt[i - 1]], dp[i - 1][w]);
                else
                    dp[i][w] = dp[i - 1][w];
            }
        }

        System.out.println("DP Table:");
        for (int[] row : dp) {
            for (int x : row)
                System.out.print(x + " ");
            System.out.println();
        }

        return dp[n][cap];
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("No. of items: ");
        int n = sc.nextInt();

        int[] wt = new int[n], val = new int[n];

        System.out.println("Enter weights:");
        for (int i = 0; i < n; i++) wt[i] = sc.nextInt();

        System.out.println("Enter values:");
        for (int i = 0; i < n; i++) val[i] = sc.nextInt();

        System.out.print("Enter capacity: ");
        int cap = sc.nextInt();

        int max = knap(wt, val, cap);
        System.out.println("Max value: " + max);

        sc.close();
    }
}

