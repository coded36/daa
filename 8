package exam;

import java.util.*;

public class HorspollStringMatching {
    public static int[] shiftTable(String pat) {
        int[] table = new int[256];
        int m = pat.length();

        Arrays.fill(table, m);
        for (int i = 0; i < m - 1; i++)
            table[pat.charAt(i)] = m - 1 - i;

        return table;
    }

    public static int horspoolSearch(String text, String pat) {
        int[] table = shiftTable(pat);
        int m = pat.length(), n = text.length();
        int i = m - 1;

        while (i < n) {
            int k = 0;
            while (k < m && pat.charAt(m - 1 - k) == text.charAt(i - k))
                k++;
            if (k == m)
                return i - m + 1;
            else
                i += table[text.charAt(i)];
        }

        return -1;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter the text: ");
        String text = sc.nextLine();

        System.out.print("Enter the pattern: ");
        String pattern = sc.nextLine();

        long start = System.nanoTime();
        int index = horspoolSearch(text, pattern);
        long end = System.nanoTime();

        if (index != -1)
            System.out.println("Pattern found at index: " + index);
        else
            System.out.println("Pattern not found.");

        double time = (end - start) / 1e6;
        System.out.printf("Time taken: %.4f ms\n", time);

        sc.close();
    }
}


