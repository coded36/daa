package exam;

import java.util.Random;
import java.util.Scanner;

public class MergeSortExp {

    public static void mergeSort(int[] arr, int low, int high) {
        if (high - low <= 1) 
        	return;

        int mid = (low + high) / 2;
        mergeSort(arr, low, mid);
        mergeSort(arr, mid, high);
        merge(arr, low, mid, high);
    }

    public static void merge(int[] arr, int low, int mid, int high) {
        int[] temp = new int[high - low];
        int i = low, j = mid, k = 0;

        while (i < mid && j < high) {
            if (arr[i] <= arr[j])
                temp[k++] = arr[i++];
            else
                temp[k++] = arr[j++];
        }

        while (i < mid) temp[k++] = arr[i++];
        while (j < high) temp[k++] = arr[j++];

        for (i = 0; i < temp.length; i++)
            arr[low + i] = temp[i];
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        Random rand = new Random();

        System.out.print("Enter number of elements to sort: ");
        int n = scan.nextInt();

        System.out.print("Enter number of times to run the sort: ");
        int runs = scan.nextInt();

        double totalTime = 0;

        for (int r = 0; r < runs; r++) {
            int[] arr = new int[n];

            System.out.println("\nUnsorted array for Run " + (r + 1) + ":");
            for (int i = 0; i < n; i++) {
                arr[i] = rand.nextInt(1000);
                System.out.print(arr[i] + " ");
            }

            long startTime = System.nanoTime();
            mergeSort(arr, 0, n);
            long endTime = System.nanoTime();

            double durationMs = (endTime - startTime) / 1_000_000.0;
            totalTime += durationMs;

            System.out.println("\nSorted array for Run " + (r + 1) + ":");
            for (int num : arr) System.out.print(num + " ");

            System.out.printf("\nTime taken for Run %d: %.3f ms\n", (r + 1), durationMs);
        }

        double avgTime = totalTime / runs;
        System.out.printf("\nAverage Time Taken over %d runs: %.3f ms\n", runs, avgTime);

        scan.close();
    }
}


